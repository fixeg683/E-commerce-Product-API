{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\E-commerce-Product-API\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Add item to cart with stock validation\n  const addToCart = product => {\n    if (product.stock === 0) {\n      alert('This product is out of stock');\n      return;\n    }\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Check if adding more than available stock\n        if (existingItem.quantity + 1 > product.stock) {\n          alert(`Only ${product.stock} items available in stock`);\n          return prevItems;\n        }\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...prevItems, {\n        ...product,\n        quantity: 1\n      }];\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n\n  // Update item quantity with stock validation\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => {\n      if (item.id === productId) {\n        // Check if quantity exceeds stock\n        if (quantity > item.stock) {\n          alert(`Only ${item.stock} items available in stock`);\n          return item;\n        }\n        return {\n          ...item,\n          quantity\n        };\n      }\n      return item;\n    }));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get total items count\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalPrice,\n    getTotalItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport { CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cartItems","setCartItems","addToCart","product","stock","alert","prevItems","existingItem","find","item","id","quantity","map","removeFromCart","productId","filter","updateQuantity","clearCart","getTotalPrice","reduce","total","price","getTotalItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/E-commerce-Product-API/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  // Add item to cart with stock validation\r\n  const addToCart = (product) => {\r\n    if (product.stock === 0) {\r\n      alert('This product is out of stock');\r\n      return;\r\n    }\r\n\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.id === product.id);\r\n      \r\n      if (existingItem) {\r\n        // Check if adding more than available stock\r\n        if (existingItem.quantity + 1 > product.stock) {\r\n          alert(`Only ${product.stock} items available in stock`);\r\n          return prevItems;\r\n        }\r\n        \r\n        return prevItems.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      }\r\n      \r\n      return [...prevItems, { ...product, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (productId) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  // Update item quantity with stock validation\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCartItems(prevItems =>\r\n      prevItems.map(item => {\r\n        if (item.id === productId) {\r\n          // Check if quantity exceeds stock\r\n          if (quantity > item.stock) {\r\n            alert(`Only ${item.stock} items available in stock`);\r\n            return item;\r\n          }\r\n          return { ...item, quantity };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Clear cart\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  // Calculate total price\r\n  const getTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  // Get total items count\r\n  const getTotalItems = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalPrice,\r\n    getTotalItems\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}