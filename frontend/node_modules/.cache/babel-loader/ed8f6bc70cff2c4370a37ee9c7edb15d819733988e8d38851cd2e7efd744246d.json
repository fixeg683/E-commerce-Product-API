{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Generic API request function\nconst apiRequest = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        'Authorization': `Bearer ${token}`\n      }),\n      ...options.headers\n    },\n    ...options\n  };\n  if (config.body && typeof config.body === 'object') {\n    config.body = JSON.stringify(config.body);\n  }\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status} ${response.statusText}`);\n    }\n\n    // Check if response has content\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    }\n    return await response.text();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// Product API functions\nexport const getProducts = async () => {\n  try {\n    // For development, return mock data if API is not available\n    const products = await apiRequest('/products');\n    return Array.isArray(products) ? products : [];\n  } catch (error) {\n    console.error('Failed to fetch products:', error);\n    // Return mock data for development\n    return [{\n      id: 1,\n      name: 'Sample Product 1',\n      description: 'This is a sample product description for demonstration purposes.',\n      price: 29.99,\n      image: 'https://via.placeholder.com/300x200?text=Product+1'\n    }, {\n      id: 2,\n      name: 'Sample Product 2',\n      description: 'Another sample product for testing the e-commerce application.',\n      price: 39.99,\n      image: 'https://via.placeholder.com/300x200?text=Product+2'\n    }, {\n      id: 3,\n      name: 'Sample Product 3',\n      description: 'A third sample product to fill out the product grid.',\n      price: 49.99,\n      image: 'https://via.placeholder.com/300x200?text=Product+3'\n    }];\n  }\n};\nexport const getProduct = id => apiRequest(`/products/${id}`);\nexport const createProduct = product => apiRequest('/products', {\n  method: 'POST',\n  body: product\n});\n\n// Order API functions\nexport const createOrder = async order => {\n  try {\n    return await apiRequest('/orders', {\n      method: 'POST',\n      body: order\n    });\n  } catch (error) {\n    console.error('Failed to create order:', error);\n    // Simulate successful order for development\n    return {\n      success: true,\n      orderId: Date.now(),\n      message: 'Order created successfully'\n    };\n  }\n};\nexport const getOrders = () => apiRequest('/orders');\nexport const getOrder = id => apiRequest(`/orders/${id}`);\n\n// Cart API functions (for persistent cart)\nexport const saveCart = cart => apiRequest('/cart', {\n  method: 'POST',\n  body: cart\n});\nexport const getCart = () => apiRequest('/cart');","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","token","localStorage","getItem","config","headers","body","JSON","stringify","response","fetch","ok","Error","status","statusText","contentType","get","includes","json","text","error","console","getProducts","products","Array","isArray","id","name","description","price","image","getProduct","createProduct","product","method","createOrder","order","success","orderId","Date","now","message","getOrders","getOrder","saveCart","cart","getCart"],"sources":["C:/Users/user/Desktop/E-commerce-Product-API/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// Generic API request function\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { 'Authorization': `Bearer ${token}` }),\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  if (config.body && typeof config.body === 'object') {\r\n    config.body = JSON.stringify(config.body);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API error: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    // Check if response has content\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType && contentType.includes('application/json')) {\r\n      return await response.json();\r\n    }\r\n    \r\n    return await response.text();\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Product API functions\r\nexport const getProducts = async () => {\r\n  try {\r\n    // For development, return mock data if API is not available\r\n    const products = await apiRequest('/products');\r\n    return Array.isArray(products) ? products : [];\r\n  } catch (error) {\r\n    console.error('Failed to fetch products:', error);\r\n    // Return mock data for development\r\n    return [\r\n      {\r\n        id: 1,\r\n        name: 'Sample Product 1',\r\n        description: 'This is a sample product description for demonstration purposes.',\r\n        price: 29.99,\r\n        image: 'https://via.placeholder.com/300x200?text=Product+1'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Sample Product 2',\r\n        description: 'Another sample product for testing the e-commerce application.',\r\n        price: 39.99,\r\n        image: 'https://via.placeholder.com/300x200?text=Product+2'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Sample Product 3',\r\n        description: 'A third sample product to fill out the product grid.',\r\n        price: 49.99,\r\n        image: 'https://via.placeholder.com/300x200?text=Product+3'\r\n      }\r\n    ];\r\n  }\r\n};\r\n\r\nexport const getProduct = (id) => apiRequest(`/products/${id}`);\r\nexport const createProduct = (product) => apiRequest('/products', { method: 'POST', body: product });\r\n\r\n// Order API functions\r\nexport const createOrder = async (order) => {\r\n  try {\r\n    return await apiRequest('/orders', { method: 'POST', body: order });\r\n  } catch (error) {\r\n    console.error('Failed to create order:', error);\r\n    // Simulate successful order for development\r\n    return { success: true, orderId: Date.now(), message: 'Order created successfully' };\r\n  }\r\n};\r\n\r\nexport const getOrders = () => apiRequest('/orders');\r\nexport const getOrder = (id) => apiRequest(`/orders/${id}`);\r\n\r\n// Cart API functions (for persistent cart)\r\nexport const saveCart = (cart) => apiRequest('/cart', { method: 'POST', body: cart });\r\nexport const getCart = () => apiRequest('/cart');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}